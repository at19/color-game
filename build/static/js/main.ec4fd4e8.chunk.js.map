{"version":3,"sources":["contexts.js","components/NavBar/NavBar.js","values.js","components/Hero/Hero.js","components/Leaderboard/Leaderboard.js","containers/MainPage/index.js","components/ColorTile/ColorTile.js","containers/Colors/Colors.js","containers/Header/Header.js","components/Modal/Modal.js","colors.js","firebase.js","containers/Play/Play.js","containers/Auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","ColorModelContext","NavBar","props","react_default","a","createElement","className","react_router_dom","to","Consumer","auth","onClick","signOut","DIFFICULTIES","minimumPoints","numberOfColors","similarColors","headerColor","canLoadNewColors","COLOR_PATTERNS","MIN_POINTS","ENTRY_DIFFICULTY","MAX_TRIES","POINTS_ADDITION","BACKGROUND_COLOR","Hero","_ref","handleColorModelChange","options","value","label","model","react_select_browser_esm","map","e","onChange","selectedOption","Leaderboard","getContent","index","console","log","key","name","points","MainPage","leaderboardContent","components_NavBar_NavBar","components_Hero_Hero","components_Leaderboard_Leaderboard","colorPattern","ColorTile","backgroundColor","style","id","whichOne","colors","colorTiles","length","push","components_ColorTile_ColorTile","header","textColor","split","color","chosenColor","resetColors","triesLeft","Modal","playAgain","randomNumber","min","max","Math","floor","random","randomFactor","_factor","round","randomColorRGBArray","Array","from","randomColor","values","hue","saturation","lightness","concat","randomColorHSL","toString","join","Error","similarColorForRGBHelper","rgb","slice","similarColorForHEX","hex","bigint","parseInt","hexToRgb","endsWith","Number","padStart","similarColor","substring","trim","similarColorForHSL","similarColorForRGB","colorsWithSimilar","numberOfSimilarColors","chosenOne","indexes","pop","getColorData","difficulty","apply","Object","toConsumableArray","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Play","_useState","useState","_useState2","slicedToArray","setPoints","_useState3","_useState4","setDifficulty","_useState5","_useState6","setTriesLeft","_useState7","_useState8","colorData","setColorData","_useState9","_useState10","gameOver","setGameOver","gameOverWork","currentUser","sortString","firestore","collection","where","uid","get","then","res","docs","data","ref","update","defineProperty","updateHighScore","gotCorrectAnswer","newPoints","newDifficulty","getNewDifficulty","onColorsClick","clickedIndex","target","includes","newColors","objectSpread","newTriesLeft","gotWrongAnswer","Header_Header","Colors_Colors","components_Modal_Modal","Auth","signInUser","createUser","response","setResponse","isSignIn","setIsSignIn","toggleButtonText","setToggleButtonText","headerText","setHeaderText","formik_esm","initialValues","email","password","validate","errors","test","onSubmit","_ref2","setSubmitting","catch","error","message","_ref3","isSubmitting","Fragment","noValidate","disabled","placeholder","type","component","App","localStorage","getItem","userInfo","setUserInfo","redirectElement","setRedirectElement","colorModel","setColorModel","performLoggedInWork","setItem","react_router","signIn","signInWithEmailAndPassword","create","createUserWithEmailAndPassword","_res$user","user","add","highScoreRGB","highScoreHEX","highScoreHSL","dateJoined","Date","colorPalettes","profilePic","bio","addUserToFirestore","useEffect","callback","onAuthStateChanged","Provider","path","render","containers_Auth_Auth","exact","containers_MainPage","orderBy","getLeaderboardContent","containers_Play_Play","Boolean","window","location","hostname","match","initializeApp","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec4fd4e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const ColorModelContext = React.createContext();\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nimport { AuthContext } from \"../../contexts\";\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-container\">\r\n        <div className=\"nav-container__inner\">\r\n          <Link to=\"/\" className=\"home-link\">\r\n            12345-12345\r\n          </Link>\r\n          <ul className=\"top-nav\">\r\n            <li className=\"top-nav__authButton\">\r\n              <AuthContext.Consumer>\r\n                {auth =>\r\n                  auth !== null ? (\r\n                    <button onClick={props.signOut}>Sign out</button>\r\n                  ) : (\r\n                    <Link to=\"/login\">Login</Link>\r\n                  )\r\n                }\r\n              </AuthContext.Consumer>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const MAX_HUE_VALUE = 360;\r\nexport const MAX_SATURATION_VALUE = 90;\r\nexport const MAX_LIGHTNESS_VALUE = 85;\r\n\r\nexport const MAX_RGB_VALUE = 200;\r\nexport const MIN_HSL_RGB_VALUE = 25;\r\n\r\nexport const DIFFICULTIES = [\r\n  {\r\n    // Difficulty 0\r\n    minimumPoints: 0,\r\n    numberOfColors: 3,\r\n    similarColors: 0,\r\n    headerColor: \"hsl(0, 0%, 20%)\", // Gray\r\n    canLoadNewColors: true\r\n  },\r\n  {\r\n    // Difficulty 1\r\n    minimumPoints: 50,\r\n    numberOfColors: 6,\r\n    similarColors: 1,\r\n    headerColor: \"hsl(0, 25%, 97%)\", // Green\r\n    canLoadNewColors: true\r\n  },\r\n  {\r\n    // Difficulty 2\r\n    minimumPoints: 100,\r\n    numberOfColors: 6,\r\n    similarColors: 2,\r\n    headerColor: \"hsl(0, 25%, 97%)\", // Blue\r\n    canLoadNewColors: false\r\n  },\r\n  {\r\n    // Difficulty 3\r\n    minimumPoints: 200,\r\n    numberOfColors: 9,\r\n    similarColors: 4,\r\n    headerColor: \"hsl(0, 25%, 97%)\", // Purple\r\n    canLoadNewColors: false\r\n  },\r\n  {\r\n    // Difficulty 4\r\n    minimumPoints: 350,\r\n    numberOfColors: 9,\r\n    similarColors: 5,\r\n    headerColor: \"hsl(0, 25%, 97%)\", // Gold\r\n    canLoadNewColors: false\r\n  }\r\n];\r\n\r\nexport const GAMEOVER_TEXT = \"GAMEOVER\";\r\n\r\nexport const COLOR_PATTERNS = {\r\n  RGB: \"RGB\",\r\n  HSL: \"HSL\",\r\n  HEX: \"HEX\"\r\n};\r\n\r\nexport const MIN_POINTS = 0;\r\nexport const ENTRY_DIFFICULTY = 0;\r\nexport const MAX_TRIES = 5;\r\n\r\nexport const POINTS_ADDITION = 10;\r\n\r\nexport const BACKGROUND_COLOR = \"hsl(0, 25%, 97%)\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport \"./Hero.css\";\r\n\r\nimport { ColorModelContext, AuthContext } from \"../../contexts\";\r\nimport { COLOR_PATTERNS } from \"../../values\";\r\n\r\nconst Hero = ({ handleColorModelChange }) => {\r\n  const options = [\r\n    { value: COLOR_PATTERNS.RGB, label: COLOR_PATTERNS.RGB },\r\n    { value: COLOR_PATTERNS.HEX, label: COLOR_PATTERNS.HEX },\r\n    { value: COLOR_PATTERNS.HSL, label: COLOR_PATTERNS.HSL }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero__inner\">\r\n        <h2>Learn your colors, while having fun</h2>\r\n        <div className=\"hero__select\">\r\n          <ColorModelContext.Consumer>\r\n            {model => (\r\n              <Select\r\n                value={options.map(e => (e.value === model ? e : null))}\r\n                onChange={selectedOption => {\r\n                  handleColorModelChange(selectedOption.value);\r\n                }}\r\n                options={options}\r\n              />\r\n            )}\r\n          </ColorModelContext.Consumer>\r\n        </div>\r\n        <Link className=\"hero__cta\" to=\"/play\">\r\n          <AuthContext.Consumer>\r\n            {auth => (auth !== null ? \"Play\" : \"Try it out!\")}\r\n          </AuthContext.Consumer>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport \"./Leaderboard.css\";\r\n\r\nimport { AuthContext } from \"../../contexts\";\r\n\r\nconst Leaderboard = ({ getContent }) => {\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <h2 className=\"leaderboard__header\">Leaderboard</h2>\r\n      <AuthContext.Consumer>\r\n        {auth =>\r\n          auth !== null ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {getContent(\"RGB\").map((e, index) => {\r\n                  console.log(e);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{e.name}</td>\r\n                      <td>{e.points}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Please login to see the leaderboard</p>\r\n          )\r\n        }\r\n      </AuthContext.Consumer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport Hero from \"../../components/Hero/Hero\";\r\nimport Leaderboard from \"../../components/Leaderboard/Leaderboard\";\r\n\r\nconst MainPage = ({ signOut, handleColorModelChange, leaderboardContent }) => {\r\n  return (\r\n    <div>\r\n      <NavBar signOut={signOut} />\r\n      <Hero handleColorModelChange={handleColorModelChange} />\r\n      <Leaderboard\r\n        getContent={colorPattern => leaderboardContent(colorPattern)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./ColorTile.css\";\r\n\r\nimport { BACKGROUND_COLOR } from \"../../values\";\r\n\r\nconst ColorTile = props => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.backgroundColor === BACKGROUND_COLOR\r\n          ? \"tile\"\r\n          : \"tile tile--modified\"\r\n      }\r\n      // className=\"tile\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n      id={props.whichOne}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorTile;\r\n","import React from \"react\";\r\nimport \"./Colors.css\";\r\n\r\nimport ColorTile from \"../../components/ColorTile/ColorTile\";\r\n\r\nconst colorTiles = colors => {\r\n  const colorTiles = [];\r\n  for (let index = 0; index < colors.length; index++) {\r\n    colorTiles.push(\r\n      <ColorTile\r\n        key={index + 1}\r\n        whichOne={index}\r\n        backgroundColor={colors[index]}\r\n      />\r\n    );\r\n  }\r\n  return colorTiles;\r\n};\r\n\r\nconst colors = props => {\r\n  return (\r\n    <div className=\"colors\" onClick={e => props.onClick(e)}>\r\n      {colorTiles(props.colors)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default colors;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst header = props => {\r\n  const dark = `hsl(0, 0%, 15%)`;\r\n  const light = `hsl(0, 0%, 95%)`;\r\n  const lightness = props.headerColor.split(\",\")[2].split(\"%\")[0];\r\n  const textColor = lightness < 45 ? light : dark;\r\n\r\n  return (\r\n    <div className=\"header\" style={{ backgroundColor: props.headerColor }}>\r\n      <h2 className=\"header__color\" style={{ color: textColor }}>\r\n        {props.chosenColor}\r\n      </h2>\r\n      <div className=\"header__buttons\">\r\n        {props.resetColors !== null ? ( // If props.resetColors isn't null, then load New Colors button\r\n          <button onClick={props.resetColors}>New Colors</button>\r\n        ) : null}\r\n      </div>\r\n      <p className=\"header__subtext\">Tries Left: {props.triesLeft}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Modal.css\";\r\n\r\nimport { AuthContext } from \"../../contexts\";\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__body\">\r\n        <p>Points: {props.points}</p>\r\n        <AuthContext.Consumer>\r\n          {auth =>\r\n            auth !== null ? null : (\r\n              <p>\r\n                <Link to=\"/login\">Login</Link> to save your score, and compete\r\n                with friends!\r\n              </p>\r\n            )\r\n          }\r\n        </AuthContext.Consumer>\r\n      </div>\r\n      <div className=\"modal__overlay\" onClick={() => props.playAgain()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import * as values from \"./values\";\r\n\r\nconst randomNumber = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nconst randomFactor = () => {\r\n  const _factor = randomNumber(5, 20);\r\n  return Math.round(Math.random()) ? _factor : -_factor;\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  const bigint = parseInt(hex.slice(1), 16);\r\n  const r = (bigint >> 16) & 255;\r\n  const g = (bigint >> 8) & 255;\r\n  const b = bigint & 255;\r\n\r\n  return [r, g, b];\r\n}\r\n\r\nconst randomRGB = () =>\r\n  randomNumber(values.MIN_HSL_RGB_VALUE, values.MAX_RGB_VALUE);\r\n\r\nconst randomColorRGBArray = () =>\r\n  Array.from({ length: 3 }).map(() => randomRGB());\r\n\r\nconst randomColorRGB = () => `rgb(${randomColorRGBArray()})`;\r\n\r\nconst randomColorHSL = () => {\r\n  const hue = randomNumber(1, values.MAX_HUE_VALUE);\r\n  const saturation = randomNumber(\r\n    values.MIN_HSL_RGB_VALUE,\r\n    values.MAX_SATURATION_VALUE\r\n  );\r\n  const lightness = randomNumber(\r\n    values.MIN_HSL_RGB_VALUE,\r\n    values.MAX_LIGHTNESS_VALUE\r\n  );\r\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n};\r\n\r\nconst randomColorHEX = () => {\r\n  const rgb = randomColorRGBArray();\r\n  return (\r\n    \"#\" +\r\n    rgb\r\n      .map(e => {\r\n        e = e.toString(16);\r\n        return e.length === 1 ? (e += \"0\") : e;\r\n      })\r\n      .join(\"\")\r\n  );\r\n};\r\n\r\nconst randomColor = colorPattern => {\r\n  let randomColor;\r\n  switch (colorPattern) {\r\n    case values.COLOR_PATTERNS.HSL:\r\n      randomColor = randomColorHSL();\r\n      break;\r\n    case values.COLOR_PATTERNS.RGB:\r\n      randomColor = randomColorRGB();\r\n      break;\r\n    case values.COLOR_PATTERNS.HEX:\r\n      randomColor = randomColorHEX();\r\n      break;\r\n    default:\r\n      throw new Error(\"Invalid color pattern\");\r\n  }\r\n  return randomColor;\r\n};\r\n\r\nconst similarColorForHSL = color => {\r\n  return `hsl(${color\r\n    .substring(4) // removes 'hsl(' (at the front)\r\n    .slice(0, -1) // removes ')' (at the end)\r\n    .split(\",\") // ex: \"12, 25%, 3%\" => [12, 25%, 3%]\r\n    .map(e => {\r\n      if (e[e.length - 1] === \"%\") {\r\n        e = Number(e.slice(0, -1).trim());\r\n        e += randomFactor();\r\n        e = e.toString() + \"%\";\r\n      }\r\n      return e;\r\n    })\r\n    .join(\",\")})`;\r\n}; // joins the array and returns it\r\n\r\nconst similarColorForRGBHelper = rgb => {\r\n  rgb = rgb.map(e => `${e + randomFactor()},`);\r\n  rgb[rgb.length - 1] = rgb[rgb.length - 1].slice(0, -1);\r\n  return rgb;\r\n};\r\n\r\nconst similarColorForRGB = color => {\r\n  return `rgb(${\r\n    similarColorForRGBHelper(\r\n      color\r\n        .substring(4) // removes 'rgb('\r\n        .slice(0, -1) // removes ')' at the end\r\n        .split(\",\")\r\n        .map(e => Number(e.trim()))\r\n    ).join(\"\") // split into red, green and blue // adds random factor into each and\r\n  })`; // returns in the rgb(#, #, #) format\r\n};\r\n\r\nconst similarColorForHEX = color =>\r\n  \"#\" +\r\n  similarColorForRGBHelper(hexToRgb(color))\r\n    .map(e => {\r\n      e = e.endsWith(\",\") ? e.slice(0, -1) : e;\r\n      return Number(e)\r\n        .toString(16)\r\n        .padStart(2, \"0\");\r\n    })\r\n    .join(\"\");\r\n\r\nconst similarColor = (color, colorPattern) => {\r\n  let similarColor;\r\n  switch (colorPattern) {\r\n    case values.COLOR_PATTERNS.HSL:\r\n      similarColor = similarColorForHSL(color);\r\n      break;\r\n    case values.COLOR_PATTERNS.RGB:\r\n      similarColor = similarColorForRGB(color);\r\n      break;\r\n    case values.COLOR_PATTERNS.HEX:\r\n      similarColor = similarColorForHEX(color);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return similarColor;\r\n};\r\n\r\nconst colorsWithSimilar = (\r\n  numberOfColors,\r\n  numberOfSimilarColors,\r\n  colorPattern,\r\n  chosenOne\r\n) => {\r\n  const colors = [];\r\n  const indexes = [];\r\n\r\n  for (let index = 0; index < numberOfColors; index++) {\r\n    colors.push(randomColor(colorPattern));\r\n    if (index !== chosenOne) {\r\n      indexes.push(index);\r\n    }\r\n  }\r\n  for (let index = 0; index < numberOfSimilarColors; index++) {\r\n    colors[\r\n      indexes.pop(Math.floor(Math.random() * indexes.length) + 1)\r\n    ] = similarColor(colors[chosenOne], colorPattern);\r\n  }\r\n\r\n  return colors;\r\n};\r\n\r\nexport function getColorData(difficulty, colorPattern) {\r\n  const numberOfColors = values.DIFFICULTIES[difficulty].numberOfColors;\r\n  const numberOfSimilarColors = values.DIFFICULTIES[difficulty].similarColors;\r\n\r\n  const colors = [];\r\n\r\n  const chosenOne = Math.floor(Math.random() * numberOfColors);\r\n\r\n  if (difficulty === 0) {\r\n    // for difficulty 1 (no intentional similar colors)\r\n    for (let index = 0; index < numberOfColors; index++) {\r\n      colors.push(randomColor(colorPattern));\r\n    }\r\n  } else {\r\n    colors.push(\r\n      ...colorsWithSimilar(\r\n        numberOfColors,\r\n        numberOfSimilarColors,\r\n        colorPattern,\r\n        chosenOne\r\n      )\r\n    );\r\n  }\r\n\r\n  return { colors, chosenOne };\r\n}\r\n","const firebase = require(\"firebase/app\");\r\nrequire(\"firebase/auth\");\r\nrequire(\"firebase/firestore\");\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDic3lgSNLBrxXcnKijtBhJZl0ldwjv1TA\",\r\n  authDomain: \"choosing-colors.firebaseapp.com\",\r\n  databaseURL: \"https://choosing-colors.firebaseio.com\",\r\n  projectId: \"choosing-colors\",\r\n  storageBucket: \"choosing-colors.appspot.com\",\r\n  messagingSenderId: \"1095059129734\",\r\n  appId: \"1:1095059129734:web:b94c0a918d83a16e\"\r\n};\r\n\r\nexport function initializeApp() {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport function signInUser(email, password) {\r\n  return firebase.auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function createUser(name, email, password) {\r\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function addUserToFirestore(uid, name, email) {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .add({\r\n      uid,\r\n      name,\r\n      email,\r\n      highScoreRGB: 0,\r\n      highScoreHEX: 0,\r\n      highScoreHSL: 0,\r\n      dateJoined: new Date(),\r\n      colorPalettes: null,\r\n      profilePic: null,\r\n      bio: null\r\n    });\r\n}\r\n\r\nexport function getAuthObserver(callback) {\r\n  return firebase.auth().onAuthStateChanged(callback);\r\n}\r\n\r\nexport function signOutUser() {\r\n  return firebase.auth().signOut();\r\n}\r\n\r\nexport function updateHighScore(colorPattern, points) {\r\n  if (firebase.auth().currentUser !== null) {\r\n    const sortString = `highScore${colorPattern}`;\r\n\r\n    const query = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", firebase.auth().currentUser.uid);\r\n\r\n    query.get().then(res => {\r\n      if (res.docs[0].data()[sortString] < points) {\r\n        // New High Score\r\n        res.docs[0].ref.update({\r\n          [sortString]: points\r\n        });\r\n      }\r\n    });\r\n  }\r\n  // firebase.firestore().collection(\"users\").orderBy(sortString, \"desc\")\r\n}\r\n\r\nexport function getLeaderboardContent(colorPattern) {\r\n  const leaderboardContent = [];\r\n  const sortString = `highScore${colorPattern}`;\r\n  const query = firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .orderBy(sortString, \"desc\");\r\n\r\n  query.get().then(res => {\r\n    res.docs.map(e =>\r\n      leaderboardContent.push({\r\n        name: e.data()[\"name\"],\r\n        email: e.data()[sortString]\r\n      })\r\n    );\r\n  });\r\n\r\n  return leaderboardContent;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Play.css\";\r\n\r\nimport Colors from \"../Colors/Colors\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nimport * as values from \"../../values\";\r\nimport { getColorData } from \"../../colors\";\r\nimport { updateHighScore } from \"../../firebase\";\r\n\r\nfunction getNewDifficulty(points) {\r\n  let newDifficulty = 0;\r\n  if (points >= values.DIFFICULTIES[4].minimumPoints) {\r\n    newDifficulty = 4;\r\n  } else if (points >= values.DIFFICULTIES[3].minimumPoints) {\r\n    newDifficulty = 3;\r\n  } else if (points >= values.DIFFICULTIES[2].minimumPoints) {\r\n    newDifficulty = 2;\r\n  } else if (points >= values.DIFFICULTIES[1].minimumPoints) {\r\n    newDifficulty = 1;\r\n  }\r\n  return newDifficulty;\r\n}\r\n\r\nconst Play = props => {\r\n  // useState\r\n  const [points, setPoints] = useState(values.MIN_POINTS);\r\n  const [difficulty, setDifficulty] = useState(values.ENTRY_DIFFICULTY);\r\n  const [triesLeft, setTriesLeft] = useState(values.MAX_TRIES);\r\n  const [colorData, setColorData] = useState(\r\n    getColorData(difficulty, props.colorPattern)\r\n  );\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  function gameOverWork() {\r\n    setGameOver(true);\r\n\r\n    updateHighScore(props.colorPattern, points);\r\n  }\r\n\r\n  const gameOverModal = () =>\r\n    gameOver ? <Modal points={points} playAgain={playAgain} /> : null;\r\n\r\n  function difficultyUp() {\r\n    setTriesLeft(values.MAX_TRIES);\r\n  }\r\n\r\n  function gotCorrectAnswer() {\r\n    let newPoints = points + values.POINTS_ADDITION;\r\n    let newDifficulty = getNewDifficulty(newPoints);\r\n    const oldDifficulty = difficulty;\r\n\r\n    if (oldDifficulty !== newDifficulty) {\r\n      difficultyUp();\r\n    }\r\n\r\n    setPoints(newPoints);\r\n    setDifficulty(newDifficulty);\r\n\r\n    resetColors(newDifficulty);\r\n  }\r\n\r\n  function gotWrongAnswer(clickedIndex) {\r\n    if (colorData.colors[clickedIndex] !== values.BACKGROUND_COLOR) {\r\n      const newColors = [...colorData.colors];\r\n      newColors[clickedIndex] = values.BACKGROUND_COLOR;\r\n      setColorData({\r\n        ...colorData,\r\n        colors: newColors\r\n      });\r\n\r\n      const newTriesLeft = triesLeft - 1;\r\n      setTriesLeft(newTriesLeft);\r\n      if (newTriesLeft === 0) gameOverWork();\r\n    }\r\n  }\r\n\r\n  function resetColors(difficulty) {\r\n    setColorData(getColorData(difficulty, props.colorPattern));\r\n  }\r\n\r\n  function playAgain() {\r\n    setGameOver(false);\r\n    setDifficulty(values.ENTRY_DIFFICULTY);\r\n    setPoints(values.MIN_POINTS);\r\n    setTriesLeft(values.MAX_TRIES);\r\n    setColorData(getColorData(values.ENTRY_DIFFICULTY, props.colorPattern));\r\n  }\r\n\r\n  function onColorsClick(e) {\r\n    if (triesLeft > 0) {\r\n      const clickedIndex = Number(e.target.id);\r\n      const className = `${e.target.className}`;\r\n      if (className.includes(\"tile\")) {\r\n        clickedIndex === colorData.chosenOne\r\n          ? gotCorrectAnswer()\r\n          : gotWrongAnswer(clickedIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Play\">\r\n      <Header\r\n        headerColor={values.DIFFICULTIES[difficulty].headerColor}\r\n        chosenColor={colorData.colors[colorData.chosenOne]}\r\n        resetColors={\r\n          values.DIFFICULTIES[difficulty].canLoadNewColors\r\n            ? () => resetColors(difficulty)\r\n            : null\r\n        }\r\n        triesLeft={triesLeft}\r\n      />\r\n      <Colors colors={colorData.colors} onClick={e => onColorsClick(e)} />\r\n      {gameOverModal()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport \"./Auth.css\";\r\n\r\nconst CREATE_AN_ACCOUNT = \"Create an account\";\r\nconst SIGN_IN = \"Sign in\";\r\n\r\nconst Auth = ({ signInUser, createUser }) => {\r\n  const [response, setResponse] = useState();\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n  const [toggleButtonText, setToggleButtonText] = useState(CREATE_AN_ACCOUNT);\r\n  const [headerText, setHeaderText] = useState(SIGN_IN);\r\n\r\n  const toggleSignIn = () => {\r\n    setIsSignIn(!isSignIn);\r\n    if (!isSignIn) {\r\n      setToggleButtonText(CREATE_AN_ACCOUNT);\r\n      setHeaderText(SIGN_IN);\r\n    } else {\r\n      setToggleButtonText(SIGN_IN);\r\n      setHeaderText(CREATE_AN_ACCOUNT);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h3>{headerText}</h3>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n        validate={values => {\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          if (isSignIn) {\r\n            signInUser(values.email, values.password).catch(error => {\r\n              // Sign in failed, Show error message\r\n              setResponse(<div className=\"error\">{error.message}</div>);\r\n              setSubmitting(false);\r\n            });\r\n          } else {\r\n            createUser(values.name, values.email, values.password).catch(\r\n              error => {\r\n                setResponse(<div className=\"error\">{error.message}</div>);\r\n                setSubmitting(false);\r\n              }\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <>\r\n            <Form noValidate>\r\n              {!isSignIn ? (\r\n                <Field\r\n                  disabled={isSubmitting}\r\n                  placeholder=\"Name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                />\r\n              ) : null}\r\n              <Field\r\n                disabled={isSubmitting}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n              />\r\n              <ErrorMessage className=\"error\" name=\"email\" component=\"div\" />\r\n              <Field\r\n                disabled={isSubmitting}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              {!isSignIn ? (\r\n                <ErrorMessage\r\n                  className=\"error\"\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                />\r\n              ) : null}\r\n              <button className=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                Next\r\n              </button>\r\n              {response}\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n      <button className=\"secondary\" onClick={toggleSignIn}>\r\n        {toggleButtonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport MainPage from \"./containers/MainPage\";\nimport Play from \"./containers/Play/Play\";\nimport Auth from \"./containers/Auth/Auth\";\n\nimport { AuthContext, ColorModelContext } from \"./contexts\";\nimport {\n  signInUser,\n  signOutUser,\n  createUser,\n  addUserToFirestore,\n  getAuthObserver,\n  getLeaderboardContent\n} from \"./firebase\";\n\nfunction App() {\n  const [userInfo, setUserInfo] = useState(\n    parseInt(localStorage.getItem(\"IS_USER_LOGGED_IN\")) ? true : null\n  );\n  const [redirectElement, setRedirectElement] = useState(null);\n  const [colorModel, setColorModel] = useState(\n    localStorage.getItem(\"COLOR_MODEL\")\n  );\n\n  useEffect(() => {\n    getAuthObserver(user => {\n      setUserInfo(user);\n    });\n  });\n\n  function performLoggedInWork(res) {\n    localStorage.setItem(\"IS_USER_LOGGED_IN\", 1);\n    setRedirectElement(<Redirect to=\"/\" />);\n    setUserInfo(res);\n  }\n\n  function signIn(email, password) {\n    return signInUser(email, password).then(res => {\n      performLoggedInWork(res);\n    });\n  }\n\n  function create(name, email, password) {\n    return createUser(name, email, password).then(res => {\n      performLoggedInWork(res);\n      const { uid, email } = res.user;\n      addUserToFirestore(uid, name, email);\n    });\n  }\n\n  function signOut() {\n    signOutUser().then(() => {\n      localStorage.setItem(\"IS_USER_LOGGED_IN\", 0);\n    });\n  }\n\n  function handleColorModelChange(colorModel) {\n    setColorModel(colorModel);\n    localStorage.setItem(\"COLOR_MODEL\", colorModel);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AuthContext.Provider value={userInfo}>\n          <ColorModelContext.Provider value={colorModel}>\n            <Route\n              path=\"/login\"\n              render={() => (\n                <AuthContext.Consumer>\n                  {auth =>\n                    auth !== null ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <Auth signInUser={signIn} createUser={create} />\n                    )\n                  }\n                </AuthContext.Consumer>\n              )}\n            />\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <MainPage\n                  signIn={signIn}\n                  signOut={signOut}\n                  handleColorModelChange={model =>\n                    handleColorModelChange(model)\n                  }\n                  leaderboardContent={colorPattern =>\n                    getLeaderboardContent(colorPattern)\n                  }\n                />\n              )}\n            />\n            <ColorModelContext.Consumer>\n              {model => (\n                <Route\n                  path=\"/play\"\n                  render={() => <Play colorPattern={model} />}\n                />\n              )}\n            </ColorModelContext.Consumer>\n          </ColorModelContext.Provider>\n        </AuthContext.Provider>\n        {redirectElement}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { initializeApp } from \"./firebase\";\ninitializeApp();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}