{"version":3,"sources":["values.js","contexts.js","components/NavBar/NavBar.js","components/Hero/Hero.js","components/Leaderboard/Leaderboard.js","containers/MainPage/index.js","components/ColorTile/ColorTile.js","containers/Colors/Colors.js","containers/Header/Header.js","components/Modal/Modal.js","colors.js","firebase.js","containers/Play/Play.js","containers/Auth/Auth.js","App.js","Parent.js","serviceWorker.js","index.js"],"names":["DIFFICULTIES","minimumPoints","numberOfColors","similarColors","headerColor","canLoadNewColors","COLOR_PATTERNS","MIN_POINTS","ENTRY_DIFFICULTY","MAX_TRIES","POINTS_ADDITION","BACKGROUND_COLOR","AuthContext","React","createContext","ColorModelContext","NavBar","props","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","lastName","setLastName","useEffect","set","document","addEventListener","removeEventListener","react_default","a","createElement","className","react_router_dom","to","Consumer","auth","onClick","signOut","Hero","_ref","handleColorModelChange","options","value","label","model","react_select_browser_esm","map","e","onChange","selectedOption","Leaderboard","getContent","formattedContent","_ref2","asyncToGenerator","regenerator_default","mark","_callee","userUid","data","structured","wrap","_context","prev","next","sent","docs","name","points","concat","isCurrentUser","uid","abrupt","index","key","stop","_x","_x2","apply","this","arguments","lastTry","_ref3","_callee2","_context2","parseInt","ReactDOM","render","getElementById","_x3","_x4","id","catch","error","console","log","MainPage","leaderboardContent","components_NavBar_NavBar","components_Hero_Hero","components_Leaderboard_Leaderboard","colorPattern","ColorTile","backgroundColor","style","whichOne","colors","colorTiles","colorStacks","length","push","colorTileStacks","components_ColorTile_ColorTile","header","textColor","split","color","chosenColor","resetColors","borderColor","triesLeft","difficulty","Modal","playAgain","randomNumber","min","max","Math","floor","random","randomFactor","_factor","round","randomColorRGBArray","Array","from","randomColor","values","hue","saturation","lightness","randomColorHSL","toString","join","Error","similarColorForRGBHelper","rgb","slice","similarColorForHEX","hex","bigint","hexToRgb","endsWith","Number","padStart","similarColor","substring","trim","similarColorForHSL","similarColorForRGB","colorsWithSimilar","numberOfSimilarColors","chosenOne","indexes","pop","getColorData","toConsumableArray","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","signInUser","email","password","signInWithEmailAndPassword","createUser","createUserWithEmailAndPassword","addUserToFirestore","firestore","collection","add","highScoreRGB","highScoreHEX","highScoreHSL","dateJoined","Date","colorPalettes","profilePic","bio","Play","setPoints","_useState3","_useState4","setDifficulty","_useState5","_useState6","setTriesLeft","_useState7","_useState8","colorData","setColorData","_useState9","_useState10","gameOver","setGameOver","gameOverWork","currentUser","sortString","where","get","then","res","ref","update","defineProperty","updateHighScore","gotCorrectAnswer","newPoints","newDifficulty","getNewDifficulty","onColorsClick","clickedIndex","target","includes","newColors","objectSpread","newTriesLeft","gotWrongAnswer","Header_Header","Colors_Colors","components_Modal_Modal","Auth","response","setResponse","isSignIn","setIsSignIn","toggleButtonText","setToggleButtonText","headerText","setHeaderText","formik_esm","initialValues","validate","errors","test","onSubmit","setSubmitting","message","isSubmitting","Fragment","noValidate","disabled","placeholder","type","component","setLocalStorageItem","setItem","dispatchEvent","Event","App","userInfo","setUserInfo","redirectElement","setRedirectElement","initialColorModel","useContext","colorModel","setColorModel","performLoggedInWork","user","react_router","names","signIn","_signIn","create","_x5","_create","Provider","path","containers_Auth_Auth","exact","containers_MainPage","orderBy","getLeaderboardContent","containers_Play_Play","Parent","setCurrentUser","userIsSignedIn","onAuthStateChanged","src_App","Boolean","window","location","hostname","match","initializeApp","src_Parent","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffb9805e.chunk.js","sourcesContent":["export const MAX_HUE_VALUE = 360;\r\nexport const MAX_SATURATION_VALUE = 90;\r\nexport const MAX_LIGHTNESS_VALUE = 85;\r\n\r\nexport const MAX_RGB_VALUE = 200;\r\nexport const MIN_HSL_RGB_VALUE = 25;\r\n\r\nexport const DIFFICULTIES = [\r\n  {\r\n    // Difficulty 0\r\n    minimumPoints: 0,\r\n    numberOfColors: 3,\r\n    similarColors: 0,\r\n    headerColor: \"rgba(150, 150, 150, 0.5)\",\r\n    // headerColor: \"radial-gradient(hsl(300, 20%, 30%), hsl(295, 20%, 30%))\", // Gray\r\n    canLoadNewColors: true\r\n  },\r\n  {\r\n    // Difficulty 1\r\n    minimumPoints: 50,\r\n    numberOfColors: 6,\r\n    similarColors: 1,\r\n    headerColor: \"rgba(50, 200, 50, 0.5)\", // Green\r\n    canLoadNewColors: true\r\n  },\r\n  {\r\n    // Difficulty 2\r\n    minimumPoints: 100,\r\n    numberOfColors: 6,\r\n    similarColors: 2,\r\n    headerColor: \"rgba(25, 100, 200, 0.5)\", // Blue\r\n    canLoadNewColors: false\r\n  },\r\n  {\r\n    // Difficulty 3\r\n    minimumPoints: 200,\r\n    numberOfColors: 9,\r\n    similarColors: 4,\r\n    headerColor: \"rgba(200, 25, 200, 0.7)\", // Purple\r\n    canLoadNewColors: false\r\n  },\r\n  {\r\n    // Difficulty 4\r\n    minimumPoints: 350,\r\n    numberOfColors: 9,\r\n    similarColors: 5,\r\n    headerColor: \"rgba(225, 200, 0, 0.7)\", // Gold\r\n    canLoadNewColors: false\r\n  }\r\n];\r\n\r\nexport const GAMEOVER_TEXT = \"GAMEOVER\";\r\n\r\nexport const COLOR_PATTERNS = {\r\n  RGB: \"RGB\",\r\n  HSL: \"HSL\",\r\n  HEX: \"HEX\"\r\n};\r\n\r\nexport const MIN_POINTS = 0;\r\nexport const ENTRY_DIFFICULTY = 0;\r\nexport const MAX_TRIES = 5;\r\n\r\nexport const POINTS_ADDITION = 10;\r\n\r\nexport const BACKGROUND_COLOR = \"hsl(0, 25%, 97%)\";\r\n","import React from \"react\";\r\nimport { COLOR_PATTERNS } from \"./values\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const ColorModelContext = React.createContext(COLOR_PATTERNS.RGB);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nimport { AuthContext } from \"../../contexts\";\r\n\r\nconst NavBar = props => {\r\n  const [lastName, setLastName] = useState(\r\n    localStorage.getItem(\"USER_LAST_NAME\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const set = () => setLastName(localStorage.getItem(\"USER_LAST_NAME\"));\r\n\r\n    document.addEventListener(\"localStorageItemInserted\", set);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener(\"localStorageItemInserted\", set);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-container\">\r\n        <div className=\"nav-container__inner\">\r\n          <div className=\"home-link__container\">\r\n            <Link to=\"/\" className=\"home-link\">\r\n              Choosing Colors\r\n            </Link>\r\n          </div>\r\n          <ul className=\"top-nav\">\r\n            <li className=\"top-nav__authButton\">\r\n              <p>{lastName !== \"0\" ? lastName : null}</p>\r\n              <AuthContext.Consumer>\r\n                {auth => {\r\n                  return auth !== null ? (\r\n                    <button onClick={props.signOut}>Sign out</button>\r\n                  ) : (\r\n                    <Link to=\"/login\">Login</Link>\r\n                  );\r\n                }}\r\n              </AuthContext.Consumer>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport \"./Hero.css\";\r\n\r\nimport { ColorModelContext, AuthContext } from \"../../contexts\";\r\nimport { COLOR_PATTERNS } from \"../../values\";\r\n\r\nconst Hero = ({ handleColorModelChange }) => {\r\n  const options = [\r\n    { value: COLOR_PATTERNS.RGB, label: COLOR_PATTERNS.RGB },\r\n    { value: COLOR_PATTERNS.HEX, label: COLOR_PATTERNS.HEX },\r\n    { value: COLOR_PATTERNS.HSL, label: COLOR_PATTERNS.HSL }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero__inner\">\r\n        <h2>Learn your colors, while having fun</h2>\r\n        <div className=\"hero__select\">\r\n          <ColorModelContext.Consumer>\r\n            {model => (\r\n              <Select\r\n                value={options.map(e => (e.value === model ? e : null))}\r\n                onChange={selectedOption => {\r\n                  handleColorModelChange(selectedOption.value);\r\n                }}\r\n                options={options}\r\n              />\r\n            )}\r\n          </ColorModelContext.Consumer>\r\n        </div>\r\n        <Link className=\"hero__cta\" to=\"/play\">\r\n          <AuthContext.Consumer>\r\n            {auth => (auth !== null ? \"Play\" : \"Try it out!\")}\r\n          </AuthContext.Consumer>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Leaderboard.css\";\r\n\r\nimport { AuthContext, ColorModelContext } from \"../../contexts\";\r\n\r\nconst Leaderboard = ({ getContent }) => {\r\n  const formattedContent = async (model, userUid) => {\r\n    const data = await getContent(model);\r\n    const structured = data.docs.map(e => ({\r\n      name: e.data().name,\r\n      points: e.data()[`highScore${model}`],\r\n      isCurrentUser: e.data().uid === userUid\r\n    }));\r\n    return structured.map((e, index) => (\r\n      <tr key={index} className={e.isCurrentUser ? \"currentUser\" : null}>\r\n        <td>{index + 1}</td>\r\n        <td>{e.name}</td>\r\n        <td>{e.points}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  // Don't mind the irrelevent name given to the function\r\n  const lastTry = async (model, userUid) => {\r\n    // TODO: Show the loading spinner\r\n    const data = await formattedContent(model, userUid);\r\n\r\n    if (parseInt(localStorage.getItem(\"IS_USER_LOGGED_IN\")))\r\n      ReactDOM.render(data, document.getElementById(\"leaderboard__table-body\"));\r\n    // TODO: Hide the loading spinner\r\n  };\r\n\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <h2 className=\"leaderboard__header\">Leaderboard</h2>\r\n      <AuthContext.Consumer>\r\n        {auth =>\r\n          auth !== null ? (\r\n            <table className=\"leaderboard__table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"leaderboard__table-body\">\r\n                <ColorModelContext.Consumer>\r\n                  {model => {\r\n                    if (auth.uid) {\r\n                      lastTry(model, auth.uid).catch(error =>\r\n                        console.log(error)\r\n                      ); // Loads, formats and renders the leaderboard content\r\n                    }\r\n                  }}\r\n                </ColorModelContext.Consumer>\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Please login to see the leaderboard</p>\r\n          )\r\n        }\r\n      </AuthContext.Consumer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport Hero from \"../../components/Hero/Hero\";\r\nimport Leaderboard from \"../../components/Leaderboard/Leaderboard\";\r\n\r\nconst MainPage = ({ signOut, handleColorModelChange, leaderboardContent }) => {\r\n  return (\r\n    <div>\r\n      <NavBar signOut={signOut} />\r\n      <Hero handleColorModelChange={handleColorModelChange} />\r\n      <Leaderboard\r\n        getContent={colorPattern => leaderboardContent(colorPattern)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./ColorTile.css\";\r\n\r\nimport { BACKGROUND_COLOR } from \"../../values\";\r\n\r\nconst ColorTile = props => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.backgroundColor === BACKGROUND_COLOR\r\n          ? \"tile\"\r\n          : \"tile tile--modified\"\r\n      }\r\n      // className=\"tile\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n      id={props.whichOne}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorTile;\r\n","import React from \"react\";\r\nimport \"./Colors.css\";\r\n\r\nimport ColorTile from \"../../components/ColorTile/ColorTile\";\r\n\r\nconst colorTiles = colors => {\r\n  const colorTiles = [];\r\n  for (let index = 0; index < colors.length; index++) {\r\n    colorTiles.push(\r\n      <ColorTile\r\n        key={index + 1}\r\n        whichOne={index}\r\n        backgroundColor={colors[index]}\r\n      />\r\n    );\r\n  }\r\n  return colorTiles;\r\n};\r\n\r\nconst colorTileStacks = colorTiles => {\r\n  const colorStacks = [];\r\n  for (let index = 0; index < colorTiles.length; index += 3) {\r\n    colorStacks.push(\r\n      <div key={index} className=\"color-stack \">\r\n        {colorTiles[index]}\r\n        {colorTiles[index + 1]}\r\n        {colorTiles[index + 2]}\r\n      </div>\r\n    );\r\n  }\r\n  return colorStacks;\r\n};\r\n\r\nconst colors = props => {\r\n  return (\r\n    <div className=\"colors\" onClick={e => props.onClick(e)}>\r\n      {/* {colorTiles(props.colors)} */}\r\n      {colorTileStacks(colorTiles(props.colors))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default colors;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst header = props => {\r\n  const dark = `hsl(0, 0%, 15%)`;\r\n  const light = `hsl(0, 0%, 95%)`;\r\n  const lightness = props.headerColor.split(\",\")[2].split(\"%\")[0];\r\n  const textColor = lightness < 45 ? light : dark;\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">Go Back</Link>\r\n      <h2 className=\"header__color\" style={{ color: textColor }}>\r\n        {props.chosenColor}\r\n      </h2>\r\n      <div className=\"header__buttons\">\r\n        {props.resetColors !== null ? ( // If props.resetColors isn't null, then load New Colors button\r\n          <button onClick={props.resetColors}>New Colors</button>\r\n        ) : null}\r\n      </div>\r\n      <p\r\n        className=\"header__subtext\"\r\n        style={{ borderColor: props.triesLeft < 3 ? \"red\" : \"green\" }}\r\n      >\r\n        Tries Left: {props.triesLeft}\r\n      </p>\r\n      <p\r\n        className=\"header__subtext featured\"\r\n        style={{ backgroundColor: props.headerColor }}\r\n      >\r\n        Level: {props.difficulty}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Modal.css\";\r\n\r\nimport { AuthContext } from \"../../contexts\";\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__body\">\r\n        <p className=\"celebratory\">You Scored {props.points} points!</p>\r\n        <button>Play again</button>\r\n        <AuthContext.Consumer>\r\n          {auth =>\r\n            auth !== null ? null : (\r\n              <p className=\"subtext\">\r\n                <Link to=\"/login\">Login</Link> to save your score, and compete\r\n                with friends!\r\n              </p>\r\n            )\r\n          }\r\n        </AuthContext.Consumer>\r\n      </div>\r\n      <div className=\"modal__overlay\" onClick={() => props.playAgain()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import * as values from \"./values\";\r\n\r\nconst randomNumber = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nconst randomFactor = () => {\r\n  const _factor = randomNumber(5, 20);\r\n  return Math.round(Math.random()) ? _factor : -_factor;\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  const bigint = parseInt(hex.slice(1), 16);\r\n  const r = (bigint >> 16) & 255;\r\n  const g = (bigint >> 8) & 255;\r\n  const b = bigint & 255;\r\n\r\n  return [r, g, b];\r\n}\r\n\r\nconst randomRGB = () =>\r\n  randomNumber(values.MIN_HSL_RGB_VALUE, values.MAX_RGB_VALUE);\r\n\r\nconst randomColorRGBArray = () =>\r\n  Array.from({ length: 3 }).map(() => randomRGB());\r\n\r\nconst randomColorRGB = () => `rgb(${randomColorRGBArray()})`;\r\n\r\nconst randomColorHSL = () => {\r\n  const hue = randomNumber(1, values.MAX_HUE_VALUE);\r\n  const saturation = randomNumber(\r\n    values.MIN_HSL_RGB_VALUE,\r\n    values.MAX_SATURATION_VALUE\r\n  );\r\n  const lightness = randomNumber(\r\n    values.MIN_HSL_RGB_VALUE,\r\n    values.MAX_LIGHTNESS_VALUE\r\n  );\r\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n};\r\n\r\nconst randomColorHEX = () => {\r\n  const rgb = randomColorRGBArray();\r\n  return (\r\n    \"#\" +\r\n    rgb\r\n      .map(e => {\r\n        e = e.toString(16);\r\n        return e.length === 1 ? (e += \"0\") : e;\r\n      })\r\n      .join(\"\")\r\n  );\r\n};\r\n\r\nconst randomColor = colorPattern => {\r\n  let randomColor;\r\n  switch (colorPattern) {\r\n    case values.COLOR_PATTERNS.HSL:\r\n      randomColor = randomColorHSL();\r\n      break;\r\n    case values.COLOR_PATTERNS.RGB:\r\n      randomColor = randomColorRGB();\r\n      break;\r\n    case values.COLOR_PATTERNS.HEX:\r\n      randomColor = randomColorHEX();\r\n      break;\r\n    default:\r\n      throw new Error(\"Invalid color pattern\");\r\n  }\r\n  return randomColor;\r\n};\r\n\r\nconst similarColorForHSL = color => {\r\n  return `hsl(${color\r\n    .substring(4) // removes 'hsl(' (at the front)\r\n    .slice(0, -1) // removes ')' (at the end)\r\n    .split(\",\") // ex: \"12, 25%, 3%\" => [12, 25%, 3%]\r\n    .map(e => {\r\n      if (e[e.length - 1] === \"%\") {\r\n        e = Number(e.slice(0, -1).trim());\r\n        e += randomFactor();\r\n        e = e.toString() + \"%\";\r\n      }\r\n      return e;\r\n    })\r\n    .join(\",\")})`;\r\n}; // joins the array and returns it\r\n\r\nconst similarColorForRGBHelper = rgb => {\r\n  rgb = rgb.map(e => `${e + randomFactor()},`);\r\n  rgb[rgb.length - 1] = rgb[rgb.length - 1].slice(0, -1);\r\n  return rgb;\r\n};\r\n\r\nconst similarColorForRGB = color => {\r\n  return `rgb(${\r\n    similarColorForRGBHelper(\r\n      color\r\n        .substring(4) // removes 'rgb('\r\n        .slice(0, -1) // removes ')' at the end\r\n        .split(\",\")\r\n        .map(e => Number(e.trim()))\r\n    ).join(\"\") // split into red, green and blue // adds random factor into each and\r\n  })`; // returns in the rgb(#, #, #) format\r\n};\r\n\r\nconst similarColorForHEX = color =>\r\n  \"#\" +\r\n  similarColorForRGBHelper(hexToRgb(color))\r\n    .map(e => {\r\n      e = e.endsWith(\",\") ? e.slice(0, -1) : e;\r\n      return Number(e)\r\n        .toString(16)\r\n        .padStart(2, \"0\");\r\n    })\r\n    .join(\"\");\r\n\r\nconst similarColor = (color, colorPattern) => {\r\n  let similarColor;\r\n  switch (colorPattern) {\r\n    case values.COLOR_PATTERNS.HSL:\r\n      similarColor = similarColorForHSL(color);\r\n      break;\r\n    case values.COLOR_PATTERNS.RGB:\r\n      similarColor = similarColorForRGB(color);\r\n      break;\r\n    case values.COLOR_PATTERNS.HEX:\r\n      similarColor = similarColorForHEX(color);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return similarColor;\r\n};\r\n\r\nconst colorsWithSimilar = (\r\n  numberOfColors,\r\n  numberOfSimilarColors,\r\n  colorPattern,\r\n  chosenOne\r\n) => {\r\n  const colors = [];\r\n  const indexes = [];\r\n\r\n  for (let index = 0; index < numberOfColors; index++) {\r\n    colors.push(randomColor(colorPattern));\r\n    if (index !== chosenOne) {\r\n      indexes.push(index);\r\n    }\r\n  }\r\n  for (let index = 0; index < numberOfSimilarColors; index++) {\r\n    colors[\r\n      indexes.pop(Math.floor(Math.random() * indexes.length) + 1)\r\n    ] = similarColor(colors[chosenOne], colorPattern);\r\n  }\r\n\r\n  return colors;\r\n};\r\n\r\nexport function getColorData(difficulty, colorPattern) {\r\n  const numberOfColors = values.DIFFICULTIES[difficulty].numberOfColors;\r\n  const numberOfSimilarColors = values.DIFFICULTIES[difficulty].similarColors;\r\n\r\n  const colors = [];\r\n\r\n  const chosenOne = Math.floor(Math.random() * numberOfColors);\r\n\r\n  if (difficulty === 0) {\r\n    // for difficulty 1 (no intentional similar colors)\r\n    for (let index = 0; index < numberOfColors; index++) {\r\n      colors.push(randomColor(colorPattern));\r\n    }\r\n  } else {\r\n    colors.push(\r\n      ...colorsWithSimilar(\r\n        numberOfColors,\r\n        numberOfSimilarColors,\r\n        colorPattern,\r\n        chosenOne\r\n      )\r\n    );\r\n  }\r\n\r\n  return { colors, chosenOne };\r\n}\r\n","const firebase = require(\"firebase/app\");\r\nrequire(\"firebase/auth\");\r\nrequire(\"firebase/firestore\");\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDic3lgSNLBrxXcnKijtBhJZl0ldwjv1TA\",\r\n  authDomain: \"choosing-colors.firebaseapp.com\",\r\n  databaseURL: \"https://choosing-colors.firebaseio.com\",\r\n  projectId: \"choosing-colors\",\r\n  storageBucket: \"choosing-colors.appspot.com\",\r\n  messagingSenderId: \"1095059129734\",\r\n  appId: \"1:1095059129734:web:b94c0a918d83a16e\"\r\n};\r\n\r\nexport function initializeApp() {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport function signInUser(email, password) {\r\n  return firebase.auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function createUser(name, email, password) {\r\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function addUserToFirestore(uid, name, email) {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .add({\r\n      uid,\r\n      name,\r\n      email,\r\n      highScoreRGB: 0,\r\n      highScoreHEX: 0,\r\n      highScoreHSL: 0,\r\n      dateJoined: new Date(),\r\n      colorPalettes: null,\r\n      profilePic: null,\r\n      bio: null\r\n    });\r\n}\r\n\r\nexport function signOutUser() {\r\n  return firebase.auth().signOut();\r\n}\r\n\r\nexport function updateHighScore(colorPattern, points) {\r\n  if (firebase.auth().currentUser !== null) {\r\n    const sortString = `highScore${colorPattern}`;\r\n\r\n    const query = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", firebase.auth().currentUser.uid);\r\n\r\n    query.get().then(res => {\r\n      if (res.docs[0].data()[sortString] < points) {\r\n        // New High Score\r\n        res.docs[0].ref.update({\r\n          [sortString]: points\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function getLeaderboardContent(colorPattern) {\r\n  const sortString = `highScore${colorPattern}`;\r\n  const query = firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .orderBy(sortString, \"desc\");\r\n\r\n  return query.get();\r\n}\r\n\r\nexport function getAuthObserver(userIsSignedIn) {\r\n  return firebase.auth().onAuthStateChanged(user => {\r\n    if (user) {\r\n      userIsSignedIn(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  return firebase.auth().currentUser;\r\n}\r\n\r\nexport function getUserData(uid) {\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"uid\", \"==\", uid)\r\n    .get();\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Play.css\";\r\n\r\nimport Colors from \"../Colors/Colors\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nimport * as values from \"../../values\";\r\nimport { getColorData } from \"../../colors\";\r\nimport { updateHighScore } from \"../../firebase\";\r\n\r\nfunction getNewDifficulty(points) {\r\n  let newDifficulty = 0;\r\n  if (points >= values.DIFFICULTIES[4].minimumPoints) {\r\n    newDifficulty = 4;\r\n  } else if (points >= values.DIFFICULTIES[3].minimumPoints) {\r\n    newDifficulty = 3;\r\n  } else if (points >= values.DIFFICULTIES[2].minimumPoints) {\r\n    newDifficulty = 2;\r\n  } else if (points >= values.DIFFICULTIES[1].minimumPoints) {\r\n    newDifficulty = 1;\r\n  }\r\n  return newDifficulty;\r\n}\r\n\r\nconst Play = props => {\r\n  // useState\r\n  const [points, setPoints] = useState(values.MIN_POINTS);\r\n  const [difficulty, setDifficulty] = useState(values.ENTRY_DIFFICULTY);\r\n  const [triesLeft, setTriesLeft] = useState(values.MAX_TRIES);\r\n  const [colorData, setColorData] = useState(\r\n    getColorData(difficulty, props.colorPattern)\r\n  );\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  function gameOverWork() {\r\n    setGameOver(true);\r\n\r\n    updateHighScore(props.colorPattern, points);\r\n  }\r\n\r\n  const gameOverModal = () =>\r\n    gameOver ? <Modal points={points} playAgain={playAgain} /> : null;\r\n\r\n  function difficultyUp() {\r\n    setTriesLeft(values.MAX_TRIES);\r\n  }\r\n\r\n  function gotCorrectAnswer() {\r\n    let newPoints = points + values.POINTS_ADDITION;\r\n    let newDifficulty = getNewDifficulty(newPoints);\r\n    const oldDifficulty = difficulty;\r\n\r\n    if (oldDifficulty !== newDifficulty) {\r\n      difficultyUp();\r\n    }\r\n\r\n    setPoints(newPoints);\r\n    setDifficulty(newDifficulty);\r\n\r\n    resetColors(newDifficulty);\r\n  }\r\n\r\n  function gotWrongAnswer(clickedIndex) {\r\n    if (colorData.colors[clickedIndex] !== values.BACKGROUND_COLOR) {\r\n      const newColors = [...colorData.colors];\r\n      newColors[clickedIndex] = values.BACKGROUND_COLOR;\r\n      setColorData({\r\n        ...colorData,\r\n        colors: newColors\r\n      });\r\n\r\n      const newTriesLeft = triesLeft - 1;\r\n      setTriesLeft(newTriesLeft);\r\n      if (newTriesLeft === 0) gameOverWork();\r\n    }\r\n  }\r\n\r\n  function resetColors(difficulty) {\r\n    setColorData(getColorData(difficulty, props.colorPattern));\r\n  }\r\n\r\n  function playAgain() {\r\n    setGameOver(false);\r\n    setDifficulty(values.ENTRY_DIFFICULTY);\r\n    setPoints(values.MIN_POINTS);\r\n    setTriesLeft(values.MAX_TRIES);\r\n    setColorData(getColorData(values.ENTRY_DIFFICULTY, props.colorPattern));\r\n  }\r\n\r\n  function onColorsClick(e) {\r\n    if (triesLeft > 0) {\r\n      const clickedIndex = Number(e.target.id);\r\n      const className = `${e.target.className}`;\r\n      if (className.includes(\"tile\")) {\r\n        clickedIndex === colorData.chosenOne\r\n          ? gotCorrectAnswer()\r\n          : gotWrongAnswer(clickedIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Play\">\r\n      <div className=\"Play__inner\">\r\n        <Header\r\n          headerColor={values.DIFFICULTIES[difficulty].headerColor}\r\n          chosenColor={colorData.colors[colorData.chosenOne]}\r\n          resetColors={\r\n            values.DIFFICULTIES[difficulty].canLoadNewColors\r\n              ? () => resetColors(difficulty)\r\n              : null\r\n          }\r\n          triesLeft={triesLeft}\r\n          difficulty={difficulty + 1}\r\n        />\r\n        <Colors colors={colorData.colors} onClick={e => onColorsClick(e)} />\r\n        {gameOverModal()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport \"./Auth.css\";\r\n\r\nconst CREATE_AN_ACCOUNT = \"Create an account\";\r\nconst SIGN_IN = \"Sign in\";\r\n\r\nconst Auth = ({ signInUser, createUser }) => {\r\n  const [response, setResponse] = useState();\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n  const [toggleButtonText, setToggleButtonText] = useState(CREATE_AN_ACCOUNT);\r\n  const [headerText, setHeaderText] = useState(SIGN_IN);\r\n\r\n  const toggleSignIn = () => {\r\n    setIsSignIn(!isSignIn);\r\n    if (!isSignIn) {\r\n      setToggleButtonText(CREATE_AN_ACCOUNT);\r\n      setHeaderText(SIGN_IN);\r\n    } else {\r\n      setToggleButtonText(SIGN_IN);\r\n      setHeaderText(CREATE_AN_ACCOUNT);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"form\">\r\n        <h3>{headerText}</h3>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n          validate={values => {\r\n            let errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            if (isSignIn) {\r\n              signInUser(values.email, values.password).catch(error => {\r\n                // Sign in failed, Show error message\r\n                setResponse(<div className=\"error\">{error.message}</div>);\r\n                setSubmitting(false);\r\n              });\r\n            } else {\r\n              createUser(values.name, values.email, values.password).catch(\r\n                error => {\r\n                  setResponse(<div className=\"error\">{error.message}</div>);\r\n                  setSubmitting(false);\r\n                }\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <>\r\n              <Form noValidate>\r\n                {!isSignIn ? (\r\n                  <Field\r\n                    disabled={isSubmitting}\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                  />\r\n                ) : null}\r\n                <Field\r\n                  disabled={isSubmitting}\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                />\r\n                <ErrorMessage className=\"error\" name=\"email\" component=\"div\" />\r\n                <Field\r\n                  disabled={isSubmitting}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                />\r\n                {!isSignIn ? (\r\n                  <ErrorMessage\r\n                    className=\"error\"\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                  />\r\n                ) : null}\r\n                <button\r\n                  className=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Next\r\n                </button>\r\n                {response}\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n        <button className=\"secondary\" onClick={toggleSignIn}>\r\n          {toggleButtonText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport MainPage from \"./containers/MainPage\";\r\nimport Play from \"./containers/Play/Play\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\n\r\nimport { AuthContext, ColorModelContext } from \"./contexts\";\r\nimport {\r\n  signInUser,\r\n  signOutUser,\r\n  createUser,\r\n  addUserToFirestore,\r\n  getLeaderboardContent,\r\n  getCurrentUser,\r\n  getUserData\r\n} from \"./firebase\";\r\n\r\nfunction setLocalStorageItem(key, value) {\r\n  localStorage.setItem(key, value);\r\n  document.dispatchEvent(new Event(\"localStorageItemInserted\"));\r\n}\r\n\r\nfunction App() {\r\n  const [userInfo, setUserInfo] = useState(\r\n    parseInt(localStorage.getItem(\"IS_USER_LOGGED_IN\"))\r\n      ? getCurrentUser()\r\n      : null\r\n  );\r\n  const [redirectElement, setRedirectElement] = useState(null);\r\n  const initialColorModel = useContext(ColorModelContext);\r\n  const [colorModel, setColorModel] = useState(\r\n    localStorage.getItem(\"COLOR_MODEL\") || initialColorModel\r\n  );\r\n\r\n  function performLoggedInWork(res) {\r\n    localStorage.setItem(\"IS_USER_LOGGED_IN\", 1);\r\n    setUserInfo(res.user);\r\n    setRedirectElement(<Redirect to=\"/\" />);\r\n\r\n    getUserData(res.user.uid).then(res => {\r\n      const names = res.docs[0].data().name.split(\" \");\r\n      const lastName = names[names.length - 1];\r\n      setLocalStorageItem(\"USER_LAST_NAME\", lastName);\r\n    });\r\n  }\r\n\r\n  async function signIn(email, password) {\r\n    const res = await signInUser(email, password);\r\n    performLoggedInWork(res);\r\n  }\r\n\r\n  async function create(name, email, password) {\r\n    const res = await createUser(name, email, password);\r\n    performLoggedInWork(res);\r\n    const { uid } = res.user;\r\n    addUserToFirestore(uid, name, email);\r\n  }\r\n\r\n  function signOut() {\r\n    signOutUser().then(() => {\r\n      localStorage.setItem(\"IS_USER_LOGGED_IN\", 0);\r\n      setUserInfo(null);\r\n      setLocalStorageItem(\"USER_LAST_NAME\", 0);\r\n    });\r\n  }\r\n\r\n  function handleColorModelChange(colorModel) {\r\n    setColorModel(colorModel);\r\n    localStorage.setItem(\"COLOR_MODEL\", colorModel);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <AuthContext.Provider value={userInfo}>\r\n          <ColorModelContext.Provider value={colorModel}>\r\n            <Route\r\n              path=\"/login\"\r\n              render={() => (\r\n                <AuthContext.Consumer>\r\n                  {auth => {\r\n                    return auth !== null ? (\r\n                      <Redirect to=\"/\" />\r\n                    ) : (\r\n                      <Auth signInUser={signIn} createUser={create} />\r\n                    );\r\n                  }}\r\n                </AuthContext.Consumer>\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={() => (\r\n                <MainPage\r\n                  signIn={signIn}\r\n                  signOut={signOut}\r\n                  handleColorModelChange={model =>\r\n                    handleColorModelChange(model)\r\n                  }\r\n                  leaderboardContent={colorPattern =>\r\n                    getLeaderboardContent(colorPattern)\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n            <ColorModelContext.Consumer>\r\n              {model => (\r\n                <Route\r\n                  path=\"/play\"\r\n                  render={() => <Play colorPattern={model} />}\r\n                />\r\n              )}\r\n            </ColorModelContext.Consumer>\r\n          </ColorModelContext.Provider>\r\n        </AuthContext.Provider>\r\n        {redirectElement}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport { getAuthObserver } from \"./firebase\";\r\n\r\nconst Parent = () => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    getAuthObserver(user => {\r\n      setCurrentUser(user);\r\n    });\r\n  });\r\n\r\n  return parseInt(localStorage.getItem(\"IS_USER_LOGGED_IN\")) ? (\r\n    currentUser ? (\r\n      <App />\r\n    ) : (\r\n      <div>Signing you in...</div>\r\n    )\r\n  ) : (\r\n    <App />\r\n  );\r\n};\r\n\r\nexport default Parent;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Parent from \"./Parent\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { initializeApp } from \"./firebase\";\r\ninitializeApp();\r\n\r\nReactDOM.render(<Parent />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}